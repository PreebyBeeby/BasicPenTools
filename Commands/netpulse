#!/bin/bash

clear

color_banner() {
echo -e "\033[1;35m
      ███╗   ██╗███████╗████████╗██████╗ ██╗   ██╗██╗     ███████╗███████╗      
▄ ██╗▄████╗  ██║██╔════╝╚══██╔══╝██╔══██╗██║   ██║██║     ██╔════╝██╔════╝▄ ██╗▄
 ████╗██╔██╗ ██║█████╗     ██║   ██████╔╝██║   ██║██║     ███████╗█████╗   ████╗
▀╚██╔▀██║╚██╗██║██╔══╝     ██║   ██╔═══╝ ██║   ██║██║     ╚════██║██╔══╝  ▀╚██╔▀
  ╚═╝ ██║ ╚████║███████╗   ██║   ██║     ╚██████╔╝███████╗███████║███████╗  ╚═╝ 
      ╚═╝  ╚═══╝╚══════╝   ╚═╝   ╚═╝      ╚═════╝ ╚══════╝╚══════╝╚══════╝
================================================================================\033[0m"
}

color_banner

loading_spinner() {
    local duration=$1
    local chars="/-\|"
    local total_steps=$((duration * 10))
    local current_step=0

    for ((i = 0; i < total_steps; i++)); do
        echo -ne "\r\033[5;33m[Loading]\033[0m: ${chars:i % 4:1}"
        sleep 0.1
        ((current_step++))
    done
}

success_message() {
    echo -e "\n\e[32m[SUCCESS]\e[0m"
}

perform_scan() {
    if [ -z "$1" ]; then
        echo -e "\n\033[1;31mNo IP provided.\033[0m"
        exit 1
    fi

    local target_subnet="$1"

    if [[ ! "$target_subnet" =~ /24$ ]]; then
        echo -e "\n\033[1;33mAssuming single IP address. Skipping host discovery...\033[0m"
        nmap_args="-p-"
        active_hosts="$target_subnet"
    else
        echo -e "\033[1;33mPerforming host discovery on subnet $target_subnet...\033[0m"
        active_hosts=$(nmap -sn "$target_subnet" -oG - | grep "Up" | cut -d' ' -f 2)
        echo -e "\n\033[1;33m\033[4mActive Hosts\033[0m\033[1;33m\033[0m"
        echo -e "\033[1;32m$active_hosts\033[0m"

        if [ -z "$active_hosts" ]; then
            echo -e "\033[1;31mNo active hosts found. Exiting...\033[0m"
            exit 1
        fi
    fi

    echo -e "\n\033[1;33m\033[4mOptions\033[0m"
    echo -e "\033[1;32m1. Common Ports (Very Fast)\033[0m"
    echo -e "\033[1;32m2. Quick Port Scan (Fast)\033[0m"
    echo -e "\033[1;32m3. Normal Port Scan (Average)\033[0m"
    echo -e "\033[1;32m4. Intense Port Scan (Long)\033[0m"
    echo -en "\033[1;33mEnter: \033[0m"
    read -e -n 1 userinput
    echo -e ""

    case $userinput in
        "1") nmap_args="-p 22,80,443";;
        "2") nmap_args="-p 1-1000";;
        "3") nmap_args="-p 1-3000";;
        "4") nmap_args="-p-";;
        *) echo -e "\033[1;31mInvalid option. Please choose a valid scan type.\033[0m"; exit 1;;
    esac

    for ip in $active_hosts; do
        echo -e "\033[1;36mScanning ports for $ip...\033[0m"
        nmap "$nmap_args" "$ip"
    done

    echo -e "\n\033[1;33m\033[4mDo you wish to dig/nslookup to get more information?\033[0m"
    echo -e "\033[1;32m1. Dig\033[0m"
    echo -e "\033[1;32m2. Nslookup\033[0m"
    echo -e "\033[1;32m3. Whois\033[0m"
    echo -e "\033[1;32m4. Exit\033[0m"
    echo -en "\033[1;33mEnter: \033[0m"
    read -e -n 1 info
    echo -e ""

    case $info in
        "1") 
            for ip in $active_hosts; do
                echo -e "\033[1;36m$ip Info\033[0m"
                dig "$ip"
            done
            ;;
        "2") 
            for ip in $active_hosts; do
                echo -e "\033[1;36m$ip Info\033[0m"
                nslookup "$ip"
            done
            ;;
        "3")
            for ip in $active_hosts; do
                echo -e "\033[1;36m$ip Info\033[0m"
                whois "$ip"
            done
            ;;
        "4")
            exit 1;;
        *)
            exit 1;;
    esac
}


stty -icanon
perform_scan "$1"
stty sane
